Using TensorFlow backend.
model.py:93: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(24, (5, 5), strides=(2, 2), activation="elu")`
  model.add(Convolution2D(24, 5, 5, subsample=(2, 2), activation='elu')) # conv2d_1
model.py:94: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(36, (5, 5), strides=(2, 2), activation="elu")`
  model.add(Convolution2D(36, 5, 5, subsample=(2, 2), activation='elu')) # conv2d_2
model.py:95: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(48, (5, 5), strides=(2, 2), activation="elu")`
  model.add(Convolution2D(48, 5, 5, subsample=(2, 2), activation='elu')) # conv2d_3
model.py:96: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(64, (3, 3), activation="elu")`
  model.add(Convolution2D(64, 3, 3, activation='elu'))                   # conv2d_4
model.py:97: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(64, (3, 3), activation="elu")`
  model.add(Convolution2D(64, 3, 3, activation='elu'))                   # conv2d_5
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
lambda_1 (Lambda)            (None, 90, 320, 3)        0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 43, 158, 24)       1824      
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 20, 77, 36)        21636     
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 8, 37, 48)         43248     
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 6, 35, 64)         27712     
_________________________________________________________________
conv2d_5 (Conv2D)            (None, 4, 33, 64)         36928     
_________________________________________________________________
dropout_1 (Dropout)          (None, 4, 33, 64)         0         
_________________________________________________________________
flatten_1 (Flatten)          (None, 8448)              0         
_________________________________________________________________
dense_1 (Dense)              (None, 100)               844900    
_________________________________________________________________
dense_2 (Dense)              (None, 50)                5050      
_________________________________________________________________
dense_3 (Dense)              (None, 10)                510       
_________________________________________________________________
dense_4 (Dense)              (None, 1)                 11        
=================================================================
Total params: 981,819
Trainable params: 981,819
Non-trainable params: 0
_________________________________________________________________
None
Epoch 1/5
2019-07-26 10:35:37.690615: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2019-07-26 10:35:37.690683: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2019-07-26 10:35:37.690696: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2019-07-26 10:35:37.690723: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2019-07-26 10:35:37.690741: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
2019-07-26 10:35:37.785102: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2019-07-26 10:35:37.785951: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: 
name: Tesla K80
major: 3 minor: 7 memoryClockRate (GHz) 0.8235
pciBusID 0000:00:04.0
Total memory: 11.17GiB
Free memory: 11.10GiB
2019-07-26 10:35:37.786011: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 
2019-07-26 10:35:37.786038: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y 
2019-07-26 10:35:37.786067: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0)
201/201 [==============================] - 70s 351ms/step - loss: 0.0150 - val_loss: 0.0145
Epoch 2/5
201/201 [==============================] - 69s 341ms/step - loss: 0.0117 - val_loss: 0.0123
Epoch 3/5
201/201 [==============================] - 68s 341ms/step - loss: 0.0111 - val_loss: 0.0135
Epoch 4/5
201/201 [==============================] - 68s 339ms/step - loss: 0.0110 - val_loss: 0.0123
Epoch 5/5
201/201 [==============================] - 68s 339ms/step - loss: 0.0106 - val_loss: 0.0126
Model saved.

